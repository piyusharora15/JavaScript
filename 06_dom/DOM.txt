document.getElementById('title')
// <h1 id="title" class="heading">DOM learning on Chai aur code</h1>
// method to access the element via the 'title'

document.getElementById('title').id      // 'title' 
// gives the value of id.

document.getElementById('title').class    // undefined

document.getElementById('title').className  // 'heading'
// when we use HTML inside javascript(jsx), we use className.

document.getElementById('title').getAttribute('id')   // 'title'
document.getElementById('title').getAttribute('class')   // 'heading'

document.getElementById('title').setAttribute('class', 'test')  // this will overwrite in the original code.

document.getElementById('title').setAttribute('class','test heading') //this will update the attribute in the original code.

const title = document.getElementById('title');  // for easy access.

title.style.backgroundColor = 'green' // 'green' color is implemented
title.style.padding = "15px";       // '15px'
title.style.borderRadius = "15px"  //'15px'

title.textContent   // 'DOM learning on Chai aur code'
title.innerHTML     // 'DOM learning on Chai aur code'
title.innerText     // 'DOM learning on Chai aur code'

innerHTML: returns all HTML nodes.  // shows all the HTML content.
textContent: returns all text content.  // shows all the content, even those that have been removed using some display features.
innerText: gives the text in the selected node.  // only shows the text that is currently visible.

// innerText and textContent doesn't support HTML tags.

// document.getElementsByClassName('heading')   // returns a HTML Collection.

document.querySelector('h1') // selects the first 'h1' on the page and returns it.
// <h1 id="title" class="heading">...</h1>

document.querySelector('#title');
// <h1 id="title" class="heading">DOM Learning on Chai aur Code <span style="display: none;">test text</span></h1>

document.querySelector('.heading');
// <h1 id="title" class="heading">DOM Learning on Chai aur Code <span style="display: none;">test text</span></h1>

document.querySelector('input[type="password"]')
// input tag is selected.

document.querySelector('ul')
// selects the entire unordered list.
const myul = document.querySelector('ul')
myul.querySelector('li')
// selects the first list.
const turnGreen = myul.querySelector('li')
turnGreen.style.backgroundColor = "green"  // changes bg-colour to green.
turnGreen.style.padding = "10px"  // sets padding to 10px
turnGreen.innerText = "five"  // changes innerText to "five"
const tempList = document.querySelectorAll('li')   // gives a NodeList.
tempList[0].style.color = 'green'  // changes color of list 0 i.e. "one" to green.
// querySelectorAll returns a static NodeList where any changes in the DOM do not affect the content of the collection. So to access it we need to specify which element we want to manipulate.
const myH1 = document.querySelectorAll('h1')
myH1[0].style.color = 'green'  // changes color to green

document.getElementsByClassName('list-item')
// gives a HTMLCollection.
// If we want to apply array's properties on HTMLCollection, we need to first convert it to an array.
const tempClassList = document.getElementsByClassName('list-item')
const myConvertedArray = Array.from(tempClassList) // converts HTMLCollection to array.
myConvertedArray.forEach(function(li){
    li.style.color = 'orange'
})     // now we can use array's properties, here using forEach changes color to 'orange'
// Although NodeList is not an Array, it is possible to iterate over it with forEach(). It can also be converted to a real Array using Array.from().
